@use 'sass:string';
@use 'sass:list';
@import 'v2/config';

@function extract-key-from-var($key) {
  @if string.index($key, 'var(--') == 1 {
    $key: string.slice($key, 7, -2);
  }

  @return $key;
}

@function validate-key($key) {
  $restricted-colors: ['grayscale-content-1', 'grayscale-content-2', 'grayscale-content-3'];

  @if  $strict-mode and list.index($restricted-colors, $key) != null {
    @error 'Color #{$key} has no states';
  }

  @return $key;
}

@function hover($color) {
  $color: validate-key(extract-key-from-var($color));

  @return var(--#{$color}-hover);
}

@function active($color) {
  $color: validate-key(extract-key-from-var($color));

  @return var(--#{$color}-active);
}

@mixin bg-hover($color) {
  background: $color;
  &:hover { background: hover($color); }
}

@mixin bg-active($color) {
  background: $color;
  &:active { background: active($color); }
}

@mixin bg-hover-active($color) {
  background: $color;
  &:hover { background: hover($color); }
  &:active { background: active($color); }
}

@mixin color-hover($color) {
  color: $color;
  &:hover { color: hover($color); }
}

@mixin color-active($color) {
  color: $color;
  &:active { color: active($color); }
}

@mixin color-hover-active($color) {
  color: $color;
  &:hover { color: hover($color); }
  &:active { color: active($color); }
}

@mixin fill-hover($color) {
  fill: $color;
  &:hover { fill: hover($color); }
}

@mixin color-hover-svg($color) {
  color: $color;

  svg {
    fill: $color;
  }

  &:hover {
    color: hover($color);

    svg {
      fill: hover($color);
    }
  }
}

@mixin color-hover-active-svg($color) {
  @include color-hover-svg($color);

  &:active {
    color: active($color);

    svg {
      fill: active($color);
    }
  }
}
